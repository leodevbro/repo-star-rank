{"version":3,"sources":["utils.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["prettierNumber","n","nString","String","length","slice","includes","SingleRepo","apiObj","descriptionPreview","description","daysAgo","date1","date2","differenceInDays","getTime","Math","floor","diffInDays","Date","created_at","className","src","owner","avatar_url","alt","href","html_url","target","rel","name","stargazers_count","open_issues_count","login","RepoList","useState","repoArr","setRepoArr","pageNumber","setPageNumber","fetchRepos","a","currDate","agoTimeInMilliseconds","agoDate","agoDateString","toISOString","fetch","data","status","json","jsoned","items","repoList","map","item","id","url","console","log","message","useEffect","handleContainerOnBottom","useCallback","round","performance","now","x","useBottomScrollListener","i","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4aa6b076.chunk.js","sourcesContent":["export const diffInDays = (date1: Date, date2: Date) => {\n    // date1 can be higher than date2\n    // date2 can be higher than date1\n\n    // To calculate the time difference of two dates\n    let differenceInMilliseconds = 0;\n    if (date1 >= date2) {\n        differenceInMilliseconds = date1.getTime() - date2.getTime();\n    } else {\n        differenceInMilliseconds = date2.getTime() - date1.getTime();\n    }\n\n    // To calculate the no. of days between two dates\n    const differenceInDays = differenceInMilliseconds / (1000 * 3600 * 24);\n    return Math.floor(differenceInDays);\n};\n\n// console.log(diffInDays(new Date(), new Date(\"2021-06-09\")));\n// console.log(diffInDays(new Date(\"2021-06-09\"), new Date()));\n\nexport const prettierNumber = (n: number) => {\n    const nString = String(n);\n\n    let finalString = \"\";\n\n    if (nString.length <= 3) {\n        finalString = nString;\n    } else if (nString.length === 4) {\n        finalString = nString.slice(0, 1) + \".\" + nString.slice(1, 2) + \"k\";\n    } else if ([5, 6].includes(nString.length)) {\n        finalString = nString.slice(0, -3) + \"k\";\n    } else if (nString.length === 7) {\n        finalString = nString.slice(0, 1) + \".\" + nString.slice(1, 2) + \"m\";\n    } else if ([8, 9].includes(nString.length)) {\n        finalString = nString.slice(0, -6) + \"m\";\n    } else if (nString.length === 10) {\n        finalString = nString.slice(0, 1) + \".\" + nString.slice(1, 2) + \"b\";\n    } else {\n        finalString = nString.slice(0, -9) + \"b\";\n    }\n\n    return finalString;\n};\n\n// console.log(\"1 --- \", prettierNumber(1));\n// console.log(\"12 --- \", prettierNumber(12));\n// console.log(\"123 --- \", prettierNumber(123));\n// console.log(\"1234 --- \", prettierNumber(1234));\n// console.log(\"12345 --- \", prettierNumber(12345));\n// console.log(\"123456 --- \", prettierNumber(123456));\n// console.log(\"1234567 --- \", prettierNumber(1234567));\n// console.log(\"12345678 --- \", prettierNumber(12345678));\n// console.log(\"123456789 --- \", prettierNumber(123456789));\n// console.log(\"1234567890 --- \", prettierNumber(1234567890));\n// console.log(\"12345678901 --- \", prettierNumber(12345678901));\n// console.log(\"123456789012 --- \", prettierNumber(123456789012));\n// console.log(\"1234567890123 --- \", prettierNumber(1234567890123));\n","import React, { useEffect, useState, useCallback } from \"react\";\n\nimport \"./App.scss\";\nimport { diffInDays, prettierNumber } from \"./utils\";\n\nimport { useBottomScrollListener } from \"react-bottom-scroll-listener\";\n\ninterface IRepo {\n    id: number;\n    name: string;\n    url: string;\n    html_url: string;\n    created_at: string;\n    description: string | null;\n    stargazers_count: number; // count of stars\n    open_issues_count: number; // count of open issues\n    owner: {\n        id: number;\n        avatar_url: string;\n        login: string;\n    };\n}\n\nconst SingleRepo: React.FC<{ apiObj: IRepo }> = ({ apiObj }) => {\n    let descriptionPreview = \"This repo does not have a description\";\n    if (apiObj.description) {\n        if (apiObj.description.length > 50) {\n            descriptionPreview = apiObj.description.slice(0, 50) + \"...\";\n        } else {\n            descriptionPreview = apiObj.description;\n        }\n    }\n\n    const currDate = new Date();\n    const creationDate = new Date(apiObj.created_at);\n    const daysAgo = diffInDays(currDate, creationDate);\n\n    return (\n        <div className={\"repoItem\"}>\n            <div className={\"sectionImage\"}>\n                <img src={`${apiObj.owner.avatar_url}`} alt={\"Profile\"} />\n            </div>\n            <div className={\"sectionDetails\"}>\n                <div className={\"repoName\"}>\n                    <a\n                        href={apiObj.html_url}\n                        target={\"_blank\"}\n                        rel={\"noreferrer\"}\n                    >\n                        {apiObj.name}\n                    </a>\n                </div>\n                <div\n                    className={`repoDescription ${\n                        apiObj.description ? \"hasValue\" : \"noValue\"\n                    }`}\n                >\n                    {descriptionPreview}\n                </div>\n                <div className={\"repoNumbers\"}>\n                    <div className={\"nStars\"}>\n                        <strong>Stars:</strong>{\" \"}\n                        {prettierNumber(apiObj.stargazers_count)}\n                    </div>\n                    <div className={\"nOpenIssues\"}>\n                        <strong>Open Issues:</strong>{\" \"}\n                        {prettierNumber(apiObj.open_issues_count)}\n                    </div>\n                    <div className={\"timeAndAuthor\"}>\n                        Submited {daysAgo} days ago by {apiObj.owner.login}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst RepoList: React.FC = () => {\n    const [repoArr, setRepoArr] = useState<IRepo[]>([]);\n    const [pageNumber, setPageNumber] = useState(1);\n\n    const fetchRepos = async () => {\n        const daysAgo = 30;\n        const currDate = new Date();\n        const agoTimeInMilliseconds =\n            currDate.getTime() - 1000 * 3600 * 24 * daysAgo;\n        const agoDate = new Date(agoTimeInMilliseconds);\n        const agoDateString = agoDate.toISOString().slice(0, 10);\n\n        const data = await fetch(\n            `https://api.github.com/search/repositories?q=created:>${agoDateString}&sort=stars&order=desc&page=${pageNumber}`\n        );\n\n        // console.log(data);\n\n        if (data.status === 200) {\n            const jsoned = await data.json();\n            if (jsoned.items) {\n                const repoList: IRepo[] = jsoned.items.map((item: any) => {\n                    return {\n                        id: item.id,\n                        name: item.name,\n                        url: item.url,\n                        created_at: item.created_at,\n                        description: item.description,\n                        stargazers_count: item.stargazers_count, // count of stars\n                        open_issues_count: item.open_issues_count, // count of open issues\n                        html_url: item.html_url,\n                        owner: {\n                            id: item.owner.id,\n                            avatar_url: item.owner.avatar_url,\n                            login: item.owner.login,\n                        },\n                    };\n                });\n                setRepoArr([...repoArr, ...repoList]);\n            }\n        } else {\n            const jsoned = await data.json();\n            console.log(jsoned);\n            if (jsoned.message) {\n                // alert(jsoned.message);\n            }\n        }\n    };\n\n    useEffect(() => {\n        fetchRepos();\n    }, [pageNumber]);\n\n    const handleContainerOnBottom = useCallback(() => {\n        console.log(\n            \"I am at bottom in optional container! \" +\n                Math.round(performance.now())\n        );\n\n        setPageNumber((x) => x + 1);\n    }, []);\n\n    useBottomScrollListener(handleContainerOnBottom);\n\n    return (\n        <div className={\"repoListBox\"}>\n            {repoArr.map((item, i) => {\n                return <SingleRepo key={item.id} apiObj={item} />;\n            })}\n        </div>\n    );\n};\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <RepoList />\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}